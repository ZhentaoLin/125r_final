{"version":3,"sources":["tennis.jpg","tech.jpg","cr7.jpg","got.jpg","table_tennis.jpg","avatar.jpg","presentation_in.PNG","photos/IMG_0515.JPG","photos/IMG_0520.JPG","photos/IMG_0658.JPG","photos/IMG_0659.JPG","photos/IMG_0660.JPG","photos/IMG_0661.JPG","photos/IMG_0662.JPG","photos/IMG_0663.JPG","photos/IMG_0664.JPG","photos/IMG_0665.JPG","photos/IMG_0666.JPG","About.js","projects.js","Food.js","Preferences.js","Experience.js","Blog.js","Photo.js","App.js","serviceWorker.js","index.js","about.jpg","Demo.mp4","poster.png","河虾.jpg","狮子头.jpg","大煮干丝.jpeg","鸭血粉丝.jpg","lakers_logo.png"],"names":["module","exports","About","className","Container","Row","Col","xs","md","Image","src","logo","roundedCircle","href","Projects","playsInline","video","poster","onClick","window","open","Food","useState","oneShow","setOneShow","twoShow","setTwoShow","threeShow","setThreeShow","Card","border","Header","Img","variant","鸭血粉丝","Body","Text","Button","Modal","show","onHide","closeButton","Title","大煮干丝","狮子头","河虾","Preferences","lakers_logo","tennis","table_tennis","cr7","tech","got","avatar","Experience","frameBorder","width","height","innerWidth","allowFullScreen","mozallowfullscreen","webkitallowfullscreen","presentation_in","Blog","to","exact","path","Home","Blog1","Blog2","Photo","cssModule","AwsSliderStyles","data-src","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","App","key","setKey","Tabs","activeKey","onSelect","k","Tab","eventKey","title","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c181b718.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tennis.a28f042e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tech.269c141a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cr7.da134467.jpg\";","module.exports = __webpack_public_path__ + \"static/media/got.bd35d73b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/table_tennis.ce46d4fa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.210bd1ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/presentation_in.2bfcd738.PNG\";","module.exports = __webpack_public_path__ + \"static/media/IMG_0515.644767e2.JPG\";","module.exports = __webpack_public_path__ + \"static/media/IMG_0520.cb8c2369.JPG\";","module.exports = __webpack_public_path__ + \"static/media/IMG_0658.15b83a3b.JPG\";","module.exports = __webpack_public_path__ + \"static/media/IMG_0659.30e208d4.JPG\";","module.exports = __webpack_public_path__ + \"static/media/IMG_0660.adad8e71.JPG\";","module.exports = __webpack_public_path__ + \"static/media/IMG_0661.8973d7ca.JPG\";","module.exports = __webpack_public_path__ + \"static/media/IMG_0662.48ade566.JPG\";","module.exports = __webpack_public_path__ + \"static/media/IMG_0663.b249582e.JPG\";","module.exports = __webpack_public_path__ + \"static/media/IMG_0664.d52db029.JPG\";","module.exports = __webpack_public_path__ + \"static/media/IMG_0665.7c8f15cd.JPG\";","module.exports = __webpack_public_path__ + \"static/media/IMG_0666.7e947737.JPG\";","import React from 'react';\nimport './about.css';\nimport { Container, Col, Row, Image } from 'react-bootstrap';\nimport logo from './about.jpg'; // with import\n\n\nconst About = () => {\n    return (\n        <div className=\"about\">\n            <Container>\n                <Row>\n                    <Col xs={12} md={4}>\n                    <Image src={logo} roundedCircle />\n                    </Col>\n                    <Col xs={12} md={8}>\n                        <div className=\"intro\">\n                            <ul>\n                                <li> \n                                    My name is <strong>Zhentao Lin</strong>, you can also call me <strong>Allen</strong>. I'm currently a senior college \n                                student at <a href=\"https://ucsd.edu\">UC San Diego</a>. \n                                I studies <a href=\"http://cseweb.ucsd.edu/\">Computer Science </a> \n                                and <a href=\"http://www.cogsci.ucsd.edu/\">Cognitive Science</a>.\n                                </li>\n                                \n                                <li>\n                                    Previously I've worked at <strong>Linked[in]</strong> as a Software Engineer Intern for Summer 2019.\n                                    <br />\n                                    I will be joining <a href=\"https://www.linkedin.com/in/zhentao-lin/\">Linked[in]</a> as a full-time Software Engineer in March 2020. \n\n                                </li>\n\n                                <li>\n                                    In the long term, I want to own my company and make positive impact on the world. \n                                </li>\n                            </ul>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n\n        </div>\n    );\n};\nexport default About;\n\n","import React from 'react';\nimport './projects.css';\nimport { Container, Col, Row, Image} from 'react-bootstrap';\nimport video from './Demo.mp4';\nimport poster from './poster.png';\nimport \"../node_modules/video-react/dist/video-react.css\"; // import css\nimport { Player } from 'video-react';\n\nconst Projects = () => {\n    return (\n        <div className=\"projects\">\n            <Container>\n                <Row>\n                    <h2>\n                        Linkedin Summer Project (Sendbloom outlook add-in)    \n                    </h2>\n                    \n                        <ul>\n                            <li>\n                                The application helps the sales team to send emails to potential customers inside of \n                                outlook using outlook's add-in\n                            </li>\n                            <li>\n                                Lead full-stack web app development using Reactjs, Python, Django, Java, Spring Boot\n                            </li>\n                            <li> Presented 5-min product demo at the org all-hands meeting</li>\n                        </ul>\n                    \n                </Row>\n                <Row className=\"video\">\n                    <Col xs={12} md={8}>\n                        <Player\n                        playsInline\n                        // poster=\"/assets/poster.png\"\n                        src={video}\n                        />\n                    </Col>\n                </Row>\n\n                <Row> \n                    <h2> \n                        Green For All \n                    </h2>    \n\n                    <ul>\n                        <li>\n                        Developed a meal sharing web on app; encouraged families that made extra food to spare with busy users e.g. students short of time/cooking skills to homemake healthy food themselves\n                        </li>\n                        <li>\n                        Implemented uploading menu, ordering, payment functions and local server, deployed w/ Heroku Node.js, HTML,\n                        </li>\n                        <li> CSS, JavaScript, jQuery, JSON, AJAX, Google Map API </li>\n                    </ul>\n                </Row>\n                <Row>\n                    <Col xs=\"12\" md=\"8\">\n                        <Image src={poster} className=\"posterImage\"/>\n                    </Col>\n                </Row>\n                <Row>\n                <div className=\"projectLink\" onClick={() => {window.open(\"http://a10-greenforall.herokuapp.com/\")}}> \n                        View the project\n                    </div>\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nexport default Projects;","import React from 'react';\nimport { useState } from 'react';\nimport './Food.css';\nimport 河虾 from \"./河虾.jpg\";\nimport 狮子头 from \"./狮子头.jpg\";\nimport 大煮干丝 from \"./大煮干丝.jpeg\";\nimport 鸭血粉丝 from \"./鸭血粉丝.jpg\";\nimport { Container, Image, Card, Modal, Button, Row, Col } from 'react-bootstrap';\nimport \"../node_modules/video-react/dist/video-react.css\"; // import css\nimport { Player } from 'video-react';\n\nconst Food = () => {\n    const [oneShow, setOneShow] = useState(false);\n    const [twoShow, setTwoShow] = useState(false);\n    const [threeShow, setThreeShow] = useState(false);\n    const [fourShow, setFourShow] = useState(false);\n  \n\n    return (\n        <div>\n            {/* <Jumbotron>\n                <h1>FOOD</h1>\n                <p>\n                    I will mainly introduce some famous Chinese Food! \n                </p>\n            </Jumbotron> */}\n            <Container>\n                <Row> \n                    <Col>\n                        <h2> \n                            Huaiyang cuisine (淮揚菜)\n                        </h2>\n                        <p> \n                        Huaiyang cuisine (淮揚菜) is one of the Four Great Traditions in Chinese cuisine. It is derived from the native cooking styles of the region surrounding the lower reaches of the Huai and Yangtze rivers, and centred upon the cities of Huai'an, Yangzhou and Zhenjiang in Jiangsu Province. Although it is one of several sub-regional styles within Jiangsu cuisine, Huaiyang cuisine is widely seen in Chinese culinary circles[1] as the most popular and prestigious style of Jiangsu cuisine – to a point where it is considered to be among one of the Four Great Traditions (四大菜系; Sì dà càixì) that dominate the culinary heritage of China, along with Cantonese cuisine, Shandong cuisine and Sichuan cuisine.\n                        </p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs=\"12\" md=\"4\">\n                    <Card border=\"secondary\">\n                        <Card.Header>Duck blood and vermicelli soup (Chinese: 鸭血粉丝汤) </Card.Header>\n                        <Card.Img variant=\"top\" src={鸭血粉丝} />\n\n                        <Card.Body>\n                        {/* <Card.Title>Secondary Card Title</Card.Title> */}\n                        <Card.Text>\n                        <Button variant=\"primary\" onClick={setOneShow}>\n                            View More details\n                        </Button>\n                        <Modal show={oneShow} onHide={() => setOneShow(false)}>\n                            <Modal.Header closeButton>\n                            <Modal.Title>Duck blood and vermicelli soup</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                            Duck blood and vermicelli soup (Chinese: 鸭血粉丝汤) is a traditional delicacy of Nanjing, capital of Jiangsu province, and is also eaten in other regions of China. A similar dish is also eaten in Poland, Belarus and Lithuania where it's called czernina.[1]\n\n                            </Modal.Body>\n                        </Modal>\n                        </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    </Col>\n                    <Col xs=\"12\" md=\"4\">\n                    <Card border=\"secondary\">\n                        <Card.Header>Dazhu gansi (Chinese: 大煮干丝)</Card.Header>\n                        <Card.Img variant=\"top\" src={大煮干丝} />\n                        <Card.Body>\n                        {/* <Card.Title>Secondary Card Title</Card.Title> */}\n                        <Card.Text>\n                        <Button variant=\"primary\" onClick={setTwoShow}>\n                            View More details\n                        </Button>\n                        <Modal show={twoShow}  onHide={() => setTwoShow(false)}>\n                            <Modal.Header closeButton>\n                            <Modal.Title>Dazhu gansi</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                            Dazhu gansi (simplified Chinese: 大煮干丝; traditional Chinese: 大煮乾絲; pinyin: dàzhǔ gānsī) is a specialty dish of Huaiyang cuisine. Dried tofu is sliced into matchsticks and served in chicken stock. Many other ingredients can be added to the tofu. As tofu does not have much flavor, the chef is challenged to produce knifework of great precision (a hallmark of Huaiyang cuisine) and a broth of the highest quality. It is said to have been created in Yangzhou for the Qianlong emperor.[1]                        \n\n                            </Modal.Body>\n                        </Modal>\n                        </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    </Col>\n                    <Col xs=\"12\" md=\"4\">\n                    <Card border=\"secondary\">\n                        <Card.Header>Lion's Head (Chinese: 狮子头)</Card.Header>\n                        <Card.Img variant=\"top\" src={狮子头} />\n\n                        <Card.Body>\n                        {/* <Card.Title>Secondary Card Title</Card.Title> */}\n                        <Card.Text>\n                        <Button variant=\"primary\" onClick={setThreeShow}>\n                            View More details\n                        </Button>\n                        <Modal show={threeShow}  onHide={() => setThreeShow(false)}>\n                            <Modal.Header closeButton>\n                            <Modal.Title>Lion's Head</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                            Lion's Head (simplified Chinese: 狮子头; traditional Chinese: 獅子頭; pinyin: Shīzitóu) or stewed meatball is a dish from the Huaiyang cuisine of eastern China, consisting of large pork meatballs stewed with vegetables. There are two varieties: white (or plain), and red (红烧, cooked with soy sauce). The plain variety is usually stewed or steamed with napa cabbage. The red variety can be stewed with cabbage or cooked with bamboo shoots and tofu derivatives. The minced meat rich in fat is more likely to bring better texture, addition of chopped water chestnut also works.\n                        The name \"lion's head\", derives from the shape of the meatball which is supposed to resemble the head of the Chinese guardian lion, specifically.\n                        The dish originated in Yangzhou and Zhenjiang, to a lesser degree, Huai'an. While the plain variety more common in Yangzhou and the red variety more common in Zhenjiang. The dish became a part of Shanghai cuisine with the influx of migrants in the 19th and early 20th century.\n                        The dish can also be prepared with beef[1] or be made as a vegetarian dish.[2]\n                        \n                            </Modal.Body>\n                        </Modal>\n                        </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs=\"12\" md=\"4\">\n                    <Card border=\"secondary\">\n                        <Card.Header>boiled shrimps with salt</Card.Header>\n                        <Card.Img variant=\"top\" src={河虾} />\n                        <Card.Body>\n                        <Card.Text>\n                        \n                        </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    </Col>\n                </Row>\n\n                {/* <Row className=\"video\">\n                    <Col xs={12} md={6}>\n                        <iframe width=\"483\" height=\"272\" src=\"https://www.youtube.com/embed/pWZ3OMHw5Qs?list=PLMGfxXQ7noptCC6dqJHut13IfndP1YORS\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                    </Col>\n                </Row> */}\n            </Container>\n        </div>\n    );\n};\n\nexport default Food;","import React from 'react';\nimport './Preferences.css';\nimport { Container, Col, Row, Image } from 'react-bootstrap';\nimport lakers_logo from './lakers_logo.png';\nimport tennis from './tennis.jpg';\nimport tech from './tech.jpg';\nimport cr7 from './cr7.jpg';\nimport got from './got.jpg';\nimport table_tennis from './table_tennis.jpg';\nimport avatar from './avatar.jpg';\n\n\nimport \"../node_modules/video-react/dist/video-react.css\"; // import css\nimport { Player } from 'video-react';\n\nconst Preferences = () => {\n    return (\n        <div className=\"preferences\">\n            <Container>\n                <Row>\n                    <Col xs=\"12\" md=\"4\">\n                    <Image src={lakers_logo} roundedCircle />\n                    </Col>\n                    <Col xs=\"12\" md=\"4\">\n                    <Image src={tennis} roundedCircle />\n                    </Col>\n                    <Col xs=\"12\" md=\"4\">\n                    <Image src={table_tennis} roundedCircle />\n                    </Col>\n                    <Col xs=\"12\" md=\"4\">\n                    <Image src={cr7} roundedCircle />\n                    </Col>\n\n                    <Col xs=\"12\" md=\"4\">\n                    <Image src={tech} roundedCircle />\n                    </Col>\n                    <Col xs=\"12\" md=\"4\">\n                    <Image src={got} roundedCircle />\n                    </Col>\n                    <Col xs=\"12\" md=\"4\">\n                    <Image src={avatar} roundedCircle />\n                    </Col>\n                </Row>\n\n                {/* <Row className=\"video\">\n                    <Col xs={12} md={8}>\n                        <Player\n                        playsInline\n                        // poster=\"/assets/poster.png\"\n                        src=\"https://youtu.be/rdcpjVISZlE\"\n                        >\n                              <source src=\"https://youtu.be/rdcpjVISZlE\" />\n                            </Player>\n                    </Col>\n                </Row> */}\n            </Container>\n        </div>\n    );\n};\n\nexport default Preferences;","import React from 'react';\nimport './Experience.css';\nimport { Container, Image, Card, Modal, Button, Row, Col } from 'react-bootstrap';\nimport presentation_in from './presentation_in.PNG';\n\nconst Experience = () => {\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col xs=\"12\" md=\"8\">\n                    <h2> \"How action helps us perceive the world\"</h2> \n                        <p> Presentation on Cognitive Science</p>\n                    </Col>\n                    <Col xs=\"12\" md=\"8\">\n                        <iframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vT8VKgxb_cNwt4YJ9GRoiynO_STEoYsOIT1LvQwne5eUMv3WuZsPyQPNWtnewqFxOLiEEC6cJjG48vX/embed?start=false&loop=false&delayms=15000\" frameBorder=\"0\" \n                        width=\"100%\" height={400 / 1440 * window.innerWidth} allowFullScreen={true} mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\"></iframe>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs=\"12\" md=\"8\">\n                    <h2> \"Sendbloom demo\" </h2> \n                    <p> This is me presenting my product at company all-hands meeting</p>\n                    </Col> \n                    <Col xs=\"12\" md=\"8\">\n                        <Image className=\"presentation_img\" src={presentation_in} />    \n                    </Col> \n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nexport default Experience;","import React from 'react';\nimport './Blog.css';\nimport { Container, Col, Row, Image } from 'react-bootstrap';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport \"../node_modules/video-react/dist/video-react.css\"; // import css\nimport { Player } from 'video-react';\n\nconst Blog = () => {\n    return (\n        <Router>\n            <div className=\"blogSection\">\n                <Link to=\"/125r_final\">Home</Link>\n                <ul>\n                <li>\n                    <Link to=\"/125r_final/blog1\">Statement of purpose</Link>\n                </li>\n                <li>\n                    <Link to=\"/125r_final/blog2\">Analysis of supervised learning algorithms</Link>\n                </li>\n                {/* <li>\n                    <Link to=\"/dashboard\">Dashboard</Link>\n                </li> */}\n                </ul>\n\n                <hr />\n\n                        {/*\n                A <Switch> looks through all its children <Route>\n                elements and renders the first one whose path\n                matches the current URL. Use a <Switch> any time\n                you have multiple routes, but you want only one\n                of them to render at a time\n                */}\n                <Switch>\n                <Route exact path=\"/125r_final\">\n                    <Home />\n                </Route>\n                <Route path=\"/125r_final/blog1\">\n                    <Blog1 />\n                </Route>\n                <Route path=\"/125r_final/blog2\">\n                    <Blog2 />\n                </Route>\n                {/* <Route path=\"/about\">\n                    <About />\n                </Route>\n                <Route path=\"/dashboard\">\n                    <Dashboard />\n                </Route> */}\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n\nexport default Blog;\n\nfunction Home() {\n    return (\n        <div>\n\n        </div>\n    );\n}\nfunction Blog1() {\n    return (\n      <div className=\"blogItem\">\n        <p> \n        To Whom It May Concern:\n <br/>\n <br/>\n At the age of 18, I came to the U.S. from China. During the few years over here, I faced an identity crisis and gradually learned to find my role in the new society. In China, we value family the most, while in the United States, we value more about individualism. Two different cultures do not bother me but inspire me to observe more and think more. At my current stage, here is something that I found: when young people get reasonable job offers, they become satisfied. And they start to think about marriage, children, children's school and their living environment for better growth. When young people don't get job offers, they start to get panic and confused about the world. After ten years, some of those who did not get job offers become CEOs of famous startups. Some of those who did get job offers still stay in the same positions worrying about growing house prices and high expenses for their children. It means that the success of a person does not directly relate to high IQ or the immediate reward after graduation. A person may be able to finish a tough task by himself. But the person may not be able to cooperate with other people or even lead others to create a much higher power of impact. Becoming a good leader requires caring about people and nourishing the relationship. Becoming a good leader requires the person to be self-disciplined, self-aware, and driven by determination. So I begin to think about the significance of all of my actions and work with passion. I also put more focus on putting people at the core of my world, from the family unit to unknown users of a product.  \n <br/>\n <br/>\n\n I'm self-motivated to hunt for jobs and take advantage of any opportunity in the business world. Last summer, I spent 3-month to do an internship at LinkedIn. I started late because my college is quarter-based, and there are only a few quarter-based colleges. My mentor gave me a project to implement an outlook add-in version of the current product's platform. On the first day of my internship, my mentor told me that all the interns would present their work in a project fair two weeks after my start date. The time is minimal, and my given tasks require a lot more story points than two weeks -- one story point means one-day workload. During the given time, I learned a new programming language and used that language to write almost all of the required interfaces. My manager and mentor were able to navigate around the application smoothly. On the day of the presentation, I presented a live demo of my project and articulated my work in an attracting way. At my booth, many people from the targeted user group (sales team) came over and get surprised by the new functionality. They gave me great support on the following development, and we connected for future communication. The process drives me, and the successful result proved my spirit of the fearlessness of pressure. I like talking with those customers and gain insights from them. By caring about their feeling, I got to know their evaluation of the products and also brought them the new release with passion. \n  \n <br/>\n <br/>\n Besides the passion and determination, I'm super clear about my work and my life. By arranging school coursework, work, and social networking events into a scheduled timeline, I'm able to come prepared and enjoy doing all things. A healthy lifestyle is also essential for me to work in the best situation. Usually, I would make a concise plan for my daily menu, including how the nutrients should balance. I set up regular wakeup time and bedtime, gym hours, and timely travel plans. I believe a disciplined person could live the most efficiently.\n  \n <br/>\n <br/>\n I value the significance of all aspects of work and life. In this way, I would better interact with others and put other people at the core of my concern: my family, my friends, unknown users of the product, and more people. I believe all personal links are related to happiness. How do we improve the satisfaction of everyone? I value emotion management and compassion as the core solution for people's relationships, and I'm able to use them either at home or at the workspace. From the family unit, for example, one time, my girlfriend and I both were in a bad mood and stressed out. I told my bad stories to my girlfriend but got no response. I was able to control my mad emotions and listened to her stories first. It ends at being we can both listen to each other and understand our situations better. The same principles helped me in the workplace. I always ask my peers to have a one-on-one with me so that I could listen to their stories and understand them better. Sometimes such conversation gave me insights into the relationship between two of my peers. I was able to help them resolve their misunderstanding with the other one. I put a lot of concerns on others' feelings. I understand that I could not directly impose my thoughts on others because people are facing different situations. If I could put on their shoes and view in their eyes, things that I'm unable to understand from the outside becomes reasonable. I can help them out and lead them to a better way out. No matter who the person is, a family member, a friend, a co-worker, or even an unknown person, we would bridge a link. If I'm leading a team, people would be willing to follow me. I believe these two qualities are the base of leadership and management, and I've been doing in this way all the time.\n  \n <br/>\n <br/>\n I strive for any opportunity to contribute my power and bridge to another new community.  I firmly believe I'll fit in the MIT MBA program and make our impact on the world together.\n  \n <br/>\n <br/>\n Yours sincerely,\n <br/>\n <br/>\n Zhentao Lin\n \n \n        </p>\n      </div>\n    );\n}\n\nconst Blog2 = () => {\n    return (\n        <div className=\"blogItem\"> \n            <p>\n            Analysis of supervised learning algorithms\n            <br/>\n <br/>\n(SVM, KNN and D-Tree)\n<br/>\n <br/>\n[Abstraction]\n<br/>\nThis paper compares the effectiveness of three algorithms: support vector machine with\nlinear kernel, k-nearest neighbours and decision tree. By running these algorithms on\ndifferent datasets and setting different training set and testing set ratios, it will give a\nclear result on how well each algorithm perform against each other and how does\nincreasing the size of training set affect the overall testing error. It will also talks about\nsome common computational challenges encountered during the real experiment.\n<br/>\n <br/>\n[Introduction]\n<br/>\nCurrently there are a lot of supervised learning algorithms like support vector\nmachine(svm), k-nearest neighbors, decision tree, and etc.. But how do these\nalgorithms compute against each other has not been determined clearly when these\nalgorithms are learned. Support vector machine tends to have a great influence in the\nfield of machine learning because of its kernel feature. KNN is the simplest to implement\nbut the testing error seems to be really large if the k value is small because there exists\nsome overfitting in the training period. What about decision tree? In this paper, the\nauthor will run svm, knn and d-tree together on 3 datasets adopted from UCI Machine\nLearning repository. These algorithms are implemented through sklearn models. The\ntesting accuracy across algorithms will be compared under the same setting and also\ntesting accuracy among the same algorithm across different partition sizes of datasets\nwill be evaluated. The overall testing process is: preprocess the dataset, train these 3\nalgorithms over these datasets to gain the best hyperparameters, and then test on the\ntesting sets to get testing accuracies for the sake of comparison. Since different\npartitions of training sets and testing sets are evaluated(20/80, 50/50, 80/20), there will\nbe a total of 3(classifiers)*3(datasets)*3(partitions) experiments to be ran.\n<br/>\n <br/>\n[Method]\n<br/>\nLearning algorithms\n<br/>\nAs discussed before, we are using sklearn model to implement svm, knn and d-tree\nalgorithms. For support vector machine, I use the linear kernel and vary the\nregularization parameter by factors of ten from 1e-7 to 1000. For the k-nearest\nneighbors, I use a total of 26 values of k ranging from 1 to the size of the training set.\nThe algorithm is weighted by the standard Euclidean distance. For the decision tree, I\nuse entropy criterion to measure the quality of a split and select optimal maximum depth\nD from the set {1, 2, 3, 4, 5}.\n<br/>\nPerformances by Metric\n<br/>\nSince we want to evaluate the effect of increasing the training set, so for each dataset,\nwe do partition of the ratio(20/80, 50/50, 80/20). For each partition, we do 5-fold cross\nvalidation to look for the best hyperparameter to choose for the algorithm. After the best\nhyperparameter has been found, I use it to predict on the testing set to get the predicted\nvalues and compare those values with the real y values to get an average testing\naccuracy.\n<br/>\nData sets\n<br/>\nAll of the three datasets are adopted from the UCI Machine Learning Repository. Since\ndoing classification problem is a more convenient way for us to compare all of the\nalgorithms. So all of the datasets have to be converted to classification. COVTYPE\ndataset original has 7 different values of y, from 1 to 7. We can choose to predict the\nactual type out of the 7 values by fitting the algorithms. But when I ran it, the probability\nof error is too high. Since when I was computing the accuracy, I used “==” rather than\ncovariance. So to the problem, predicting 5 instead of 2 if the correct value is 6 has no\ndifference. And my training set, relative to my total number of set is relatively low, even\nless than 1/50. So I choose to treat the largest class(the one that has the most\ninstances) as positive, and the rest instances as negative. In this case, we can predict a\nbinary value. The same situation happens on the letter dataset. I convert it to binary\nproblem by treating letters A-M as positives and the rest as negatives, yielding a well\nbalanced problem.\n<br/>\n <br/>\n[Experiment]\n<br/>\nBy utilizing the methodology mentioned in the above section, I was able to get the\ntesting accuracy. There are 3 datasets in total. I ran svm, knn and decision trees on\neach of them. In that way, I want to observe the benefit of each algorithm by comparing\nthe result of different algorithms running on the same dataset. More specifically, I was\ncomparing the average testing accuracy gained after each experiment. And for each\nalgorithm on each dataset, I use different number of training sets and testing sets. I\nincrease the ratio of training sets and testing sets from 20:80 to 50:50 to 80:20. So I can\nsee the effect of increasing training set.\n<br/>\nThe result is surprising. KNN turns out to be the best algorithm among the three. To be\nclear, the support vector machine I implemented is using the linear kernel. The result\nshows that as the dataset increases, the ACC of linear svm will become worse than\nusual. It decreases from 0.75 down to 0.62. Decision tree is an algorithm that performs\nwell on every dataset, in the range of 0.75 to 0.85. While k-nearest neighbors performs\nreally great on the testing set, unexpected as I previously thought. It even get the\naverage testing error above 90% on the letter dataset. And the performances of knn on\nthe other two datasets are also not bad, around 70% to 80%.\nAnother comparison result is expected. As I increase the size of the training set and\ndecrease the size of the testing set, the testing accuracy is slightly getting better over\ntime. Because increase the training samples will increase the accuracy of the trained\nclassifier. Although the large size of my dataset will make the difference not that\nobvious, I can still observe the trend by looking at all 27 experiment results.\n<br/>\nHere is my part of my results on LETTER dataset :\n<br/>\nsvm (linear)\n<br/>\n20:80 50:50 80:20\n<br/>\ntrain_acc 0.67263636 0.66925455 0.67584379\n<br/>\nval_acc 0.67020455 0.66819091 0.67646023\n<br/>\ntest_acc 0.725875 0.7227 0.727\n<br/>\nbest_param 'C': 0.1 'C': 0.1 'C': 0.1\n<br/><br/>\nknn\n<br/>\n20:80 50:50 80:20\n<br/>\ntrain_acc 1 1 1\n<br/>\nval_acc 0.71958654 0.74101538 0.77525\n<br/>\ntest_acc 0.9503125 0.9738 0.9775\n<br/>\nbest_param 'n_neighbors': 1 'n_neighbors': 1 'n_neighbors': 1\n<br/>\n<br/>\nComputational challenge\n<br/>\nI encountered a serious computing challenge when I was doing cross validation on\nsupport vector machine. It took really long time(at least more than one hour) to find the\nbest hyperparameter. When the size of training set is large, the time got much longer.\nThen I was looking for a way to scale the dataset so that it can be faster to implement.\nThe solutions turns out to be the method called linearSVC. This is also a sklearn model\nand is equivalent to using the standard svm method with the linear kernel. By using this\nmodel, the speed increases by a large amount. My colleague suggests that the running\ntime of linearSVC is O(n), while the running time of the standard svm is O(n^3).\nAnother computational challenge I encountered is that sklearn model can only be run on\nCPU rather than GPU. So I cannot utilize more powerful processing units to compute\nparallely. So when the datasets get really large, running the algorithm will take a large\namount of time without scaling. I would suggest using better framework or model that\ncan actually use parallel computing to increase the computing speed.\n<br/>\n <br/>\n[Conclusion]\n<br/>\nThe increase of the size of training set will indeed lift the average testing accuracy.\nK-nearest neighbours is not as bad as expected on real-world data and support vector\nmachine, at least with linear kernel, is not as perfect as expected. All algorithms can\nhave bad performance some time. Real time data learning can be computationally\ntough especially when the dataset is large. It would be a good idea to look for scaling\nmethod and find a way to monitor the data processing status.\n<br/>\n <br/>\n[References]\n<br/>\nRich Caruana, Alexandru Niculescu-Mizil (1995). An Empirical Comparison of\nSupervised Learning Algorithms. Department of Computer Science, Cornell\nUniversity, Ithaca, NY 14853 USA.\n            </p>\n        </div>\n    );\n}","import React from 'react';\nimport './Photo.css';\nimport { useState } from 'react';\nimport { Container, Image, Carousel, Modal, Button, Row, Col } from 'react-bootstrap';\nimport img1 from '../src/photos/IMG_0515.JPG';\nimport img2 from '../src/photos/IMG_0520.JPG';\nimport img3 from '../src/photos/IMG_0658.JPG';\nimport img4 from '../src/photos/IMG_0659.JPG';\nimport img5 from '../src/photos/IMG_0660.JPG';\nimport img6 from '../src/photos/IMG_0661.JPG';\nimport img7 from '../src/photos/IMG_0662.JPG';\nimport img8 from '../src/photos/IMG_0663.JPG';\nimport img9 from '../src/photos/IMG_0664.JPG';\nimport img10 from '../src/photos/IMG_0665.JPG';\nimport img11 from '../src/photos/IMG_0666.JPG';\n\n\n\nimport AwesomeSlider from '../node_modules/react-awesome-slider';\nimport AwsSliderStyles from '../node_modules/react-awesome-slider/src/styles.js';\n\n\nconst Photo = () => {\n    return (\n        <Container>\n            <Row>\n                <Col xs=\"0\" md=\"2\">\n                    </Col>\n                <Col xs=\"12\" md=\"8\">\n        <AwesomeSlider cssModule={AwsSliderStyles}>\n    <div data-src={img1} />\n    <div data-src={img2} />\n    <div data-src={img3} />\n    <div data-src={img4} />\n    <div data-src={img5} />\n    <div data-src={img6} />\n    <div data-src={img7} />\n    <div data-src={img8} />\n    <div data-src={img9} />\n    <div data-src={img10} />\n    <div data-src={img11} />\n  </AwesomeSlider>\n  <Col xs=\"0\" md=\"2\">\n                    </Col>\n  </Col>\n  </Row>\n  </Container>\n\n    );\n};\n\nexport default Photo;","import React from 'react';\nimport './App.css';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport { useState } from 'react';\nimport About from './About';\nimport Projects from './projects';\nimport Food from './Food';\nimport Preferences from './Preferences';\nimport Experience from './Experience';\nimport Blog from './Blog';\nimport Photo from './Photo';\n\nfunction App() {\n  const [key, setKey] = useState('home');\n\n  return (\n    <div className=\"App\">\n        <Tabs activeKey={key} onSelect={k => setKey(k)}>\n          <Tab eventKey=\"home\" title=\"About\">\n            <About /> \n          </Tab>\n          <Tab eventKey=\"projects\" title=\"Projects\">\n            <Projects />\n          </Tab>\n          <Tab eventKey=\"experience\" title=\"Experience\">\n            <Experience />\n          </Tab>\n          <Tab eventKey=\"food\" title=\"Food\">\n            <Food />\n          </Tab>\n          <Tab eventKey=\"photo\" title=\"Photo\">\n            <Photo />\n          </Tab>\n          <Tab eventKey=\"blog\" title=\"Blog\">\n            <Blog />\n          </Tab>\n          <Tab eventKey=\"preference\" title=\"Favorites\">\n            <Preferences />\n          </Tab>\n        </Tabs>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/about.bc08d16c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Demo.822b978c.mp4\";","module.exports = __webpack_public_path__ + \"static/media/poster.82f66155.png\";","module.exports = __webpack_public_path__ + \"static/media/河虾.d0c5a1bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/狮子头.53fd9ebb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/大煮干丝.e43b45d1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/鸭血粉丝.dbbb666b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lakers_logo.8f36b909.png\";"],"sourceRoot":""}